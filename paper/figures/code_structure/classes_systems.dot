digraph "classes_systems" {
rankdir=BT
charset="utf-8"
"pydykit.systems_dae.ChemicalReactor" [color="black", fontcolor="black", label=<{ChemicalReactor|constants : list[float]<br ALIGN="LEFT"/>cooling_temperature : float<br ALIGN="LEFT"/>initial_temperature : float<br ALIGN="LEFT"/>reactant_concentration : float<br ALIGN="LEFT"/>|decompose_state()<br ALIGN="LEFT"/>descriptor_matrix()<br ALIGN="LEFT"/>get_state_columns()<br ALIGN="LEFT"/>jacobian()<br ALIGN="LEFT"/>right_hand_side()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"pydykit.systems_dae.Lorenz" [color="black", fontcolor="black", label=<{Lorenz|beta : float<br ALIGN="LEFT"/>rho : float<br ALIGN="LEFT"/>sigma : float<br ALIGN="LEFT"/>|decompose_state()<br ALIGN="LEFT"/>descriptor_matrix()<br ALIGN="LEFT"/>get_state_columns()<br ALIGN="LEFT"/>jacobian()<br ALIGN="LEFT"/>right_hand_side()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"pydykit.systems_multi_body.MultiBodySystem" [color="black", fontcolor="black", label=<{MultiBodySystem|gravity : list[float, ]<br ALIGN="LEFT"/>manager<br ALIGN="LEFT"/>mass : list[float, ]<br ALIGN="LEFT"/>nbr_constraints : int<br ALIGN="LEFT"/>nbr_dof : int<br ALIGN="LEFT"/>nbr_spatial_dimensions : int<br ALIGN="LEFT"/>parametrization : list<br ALIGN="LEFT"/>|constraint_velocity()<br ALIGN="LEFT"/>decompose_state()<br ALIGN="LEFT"/>get_state_columns()<br ALIGN="LEFT"/>kinetic_energy()<br ALIGN="LEFT"/>potential_energy()<br ALIGN="LEFT"/>potential_energy_gradient()<br ALIGN="LEFT"/>rayleigh_dissipation()<br ALIGN="LEFT"/>total_energy()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"pydykit.systems_multi_body.ParticleSystem" [color="black", fontcolor="black", label=<{ParticleSystem|constraints : list[dict, ]<br ALIGN="LEFT"/>dampers : list[dict, ]<br ALIGN="LEFT"/>nbr_particles<br ALIGN="LEFT"/>nbr_spatial_dimensions : int<br ALIGN="LEFT"/>particles : list[dict, ]<br ALIGN="LEFT"/>springs : list[dict, ]<br ALIGN="LEFT"/>supports : list[dict, ]<br ALIGN="LEFT"/>|constraint()<br ALIGN="LEFT"/>constraint_gradient()<br ALIGN="LEFT"/>decompose_into_particles(vector)<br ALIGN="LEFT"/>dissipation_matrix()<br ALIGN="LEFT"/>dynamic_viscosity(element, relative_displacement)<br ALIGN="LEFT"/>external_potential()<br ALIGN="LEFT"/>external_potential_gradient()<br ALIGN="LEFT"/>get_index_argument_based_on_type(ending)<br ALIGN="LEFT"/>get_positions_supports()<br ALIGN="LEFT"/>get_state_columns()<br ALIGN="LEFT"/>internal_potential()<br ALIGN="LEFT"/>internal_potential_gradient()<br ALIGN="LEFT"/>inverse_mass_matrix()<br ALIGN="LEFT"/>kinetic_energy_gradient_from_momentum()<br ALIGN="LEFT"/>kinetic_energy_gradient_from_velocity()<br ALIGN="LEFT"/>mass_matrix()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"pydykit.systems_port_hamiltonian.Pendulum2D" [color="black", fontcolor="black", label=<{Pendulum2D|gravity : float<br ALIGN="LEFT"/>length : float<br ALIGN="LEFT"/>mass : float<br ALIGN="LEFT"/>|costates()<br ALIGN="LEFT"/>decompose_state()<br ALIGN="LEFT"/>descriptor_matrix()<br ALIGN="LEFT"/>dissipation_matrix()<br ALIGN="LEFT"/>get_algebraic_costate()<br ALIGN="LEFT"/>get_state_columns()<br ALIGN="LEFT"/>hamiltonian()<br ALIGN="LEFT"/>hamiltonian_differential_gradient()<br ALIGN="LEFT"/>hamiltonian_gradient()<br ALIGN="LEFT"/><I>input_vector</I>()<br ALIGN="LEFT"/>nonsingular_descriptor_matrix()<br ALIGN="LEFT"/><I>port_matrix</I>()<br ALIGN="LEFT"/>structure_matrix()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"pydykit.systems_port_hamiltonian.PortHamiltonianMBS" [color="black", fontcolor="black", label=<{PortHamiltonianMBS|composed_hamiltonian : bool<br ALIGN="LEFT"/>differential_state_composition : list<br ALIGN="LEFT"/>mbs<br ALIGN="LEFT"/>nbr_hamiltonian_parts : int<br ALIGN="LEFT"/>parametrization : list<br ALIGN="LEFT"/>|constraint()<br ALIGN="LEFT"/>constraint_velocity()<br ALIGN="LEFT"/>copy(state)<br ALIGN="LEFT"/>costates()<br ALIGN="LEFT"/>decompose_state()<br ALIGN="LEFT"/>descriptor_matrix()<br ALIGN="LEFT"/>dissipated_power()<br ALIGN="LEFT"/>dissipation_matrix()<br ALIGN="LEFT"/>get_algebraic_costate()<br ALIGN="LEFT"/>get_differential_state()<br ALIGN="LEFT"/>get_state_columns()<br ALIGN="LEFT"/>get_state_dimensions()<br ALIGN="LEFT"/>hamiltonian()<br ALIGN="LEFT"/>hamiltonian_1()<br ALIGN="LEFT"/>hamiltonian_2()<br ALIGN="LEFT"/>hamiltonian_differential_gradient()<br ALIGN="LEFT"/>hamiltonian_differential_gradient_1()<br ALIGN="LEFT"/>hamiltonian_differential_gradient_2()<br ALIGN="LEFT"/>hamiltonian_gradient()<br ALIGN="LEFT"/><I>input_vector</I>()<br ALIGN="LEFT"/>nonsingular_descriptor_matrix()<br ALIGN="LEFT"/><I>port_matrix</I>()<br ALIGN="LEFT"/>structure_matrix()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"pydykit.systems_port_hamiltonian.PortHamiltonianSystem" [color="black", fontcolor="black", label=<{PortHamiltonianSystem|composed_hamiltonian : bool<br ALIGN="LEFT"/>manager<br ALIGN="LEFT"/>parametrization : list<br ALIGN="LEFT"/>|output()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"pydykit.systems_dae.QuasiLinearDAESystem" [color="black", fontcolor="black", label=<{QuasiLinearDAESystem|manager<br ALIGN="LEFT"/>parametrization : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"pydykit.systems_multi_body.RigidBodyRotatingQuaternions" [color="black", fontcolor="black", label=<{RigidBodyRotatingQuaternions|inertias : list[float, ]<br ALIGN="LEFT"/>inertias_matrix : ndarray<br ALIGN="LEFT"/>|constraint()<br ALIGN="LEFT"/>constraint_gradient()<br ALIGN="LEFT"/>dissipation_matrix()<br ALIGN="LEFT"/>external_potential()<br ALIGN="LEFT"/>external_potential_gradient()<br ALIGN="LEFT"/>internal_potential()<br ALIGN="LEFT"/>internal_potential_gradient()<br ALIGN="LEFT"/>inverse_mass_matrix()<br ALIGN="LEFT"/>kinetic_energy_gradient_from_momentum()<br ALIGN="LEFT"/>kinetic_energy_gradient_from_velocity()<br ALIGN="LEFT"/>mass_matrix()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"pydykit.systems.System" [color="black", fontcolor="black", label=<{System|dim_state<br ALIGN="LEFT"/>initial_state<br ALIGN="LEFT"/>state : list, tuple<br ALIGN="LEFT"/>state_columns<br ALIGN="LEFT"/>|build_state_vector()<br ALIGN="LEFT"/>copy(state)<br ALIGN="LEFT"/>initialize_state(state)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"pydykit.systems_dae.ChemicalReactor" -> "pydykit.systems_dae.QuasiLinearDAESystem" [arrowhead="empty", arrowtail="none"];
"pydykit.systems_dae.Lorenz" -> "pydykit.systems_dae.QuasiLinearDAESystem" [arrowhead="empty", arrowtail="none"];
"pydykit.systems_dae.QuasiLinearDAESystem" -> "pydykit.systems.System" [arrowhead="empty", arrowtail="none"];
"pydykit.systems_multi_body.MultiBodySystem" -> "pydykit.systems.System" [arrowhead="empty", arrowtail="none"];
"pydykit.systems_multi_body.ParticleSystem" -> "pydykit.systems_multi_body.MultiBodySystem" [arrowhead="empty", arrowtail="none"];
"pydykit.systems_multi_body.RigidBodyRotatingQuaternions" -> "pydykit.systems_multi_body.MultiBodySystem" [arrowhead="empty", arrowtail="none"];
"pydykit.systems_port_hamiltonian.Pendulum2D" -> "pydykit.systems_port_hamiltonian.PortHamiltonianSystem" [arrowhead="empty", arrowtail="none"];
"pydykit.systems_port_hamiltonian.PortHamiltonianMBS" -> "pydykit.systems_port_hamiltonian.PortHamiltonianSystem" [arrowhead="empty", arrowtail="none"];
"pydykit.systems_port_hamiltonian.PortHamiltonianSystem" -> "pydykit.systems.System" [arrowhead="empty", arrowtail="none"];
}
