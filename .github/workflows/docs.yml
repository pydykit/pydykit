name: Build and deploy docs
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - docs_versioning
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install -r ./requirements_mkdocs.txt
      - run: pip install .
      # Extract version from tag or use "latest" for main branch
      - name: Setup Docs Deploy
        run: |
          git config user.name ci-bot
          git config user.email ci-bot@example.com
      # Deploy using mike
      - name: Deploy documentation with mike
        run: |
          git fetch origin gh-pages --unshallow || git fetch origin gh-pages
          git checkout gh-pages || git checkout --orphan gh-pages
          git pull origin gh-pages || true

          # Ensure we're in the gh-pages branch
          git branch --set-upstream-to=origin/gh-pages gh-pages || true

          # Remove old version if it exists
          if mike list | grep -q "^$VERSION$"; then
              mike delete "$VERSION"
              git commit -m "Remove old version $VERSION" || true
              git push origin gh-pages
          fi

          # Deploy new version
          mike deploy --update-aliases "$VERSION" latest
          mike set-default latest

          # Push changes
          git push origin gh-pages
